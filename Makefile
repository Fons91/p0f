#############################################################################
# Makefile for building: p0f-QT-GUI
# Generated by qmake (2.01a) (Qt 4.8.5) on: gio lug 18 10:16:11 2013
# Project:  p0f-QT-GUI.pro
# Template: app
# Command: /usr/lib/qt4/bin/qmake -spec /usr/share/qt4/mkspecs/linux-g++ -o Makefile p0f-QT-GUI.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I../p0f-QT-interface -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I. -I../p0f-QT-interface -I.
LINK          = g++
LFLAGS        = -Wl,-O1,--sort-common,--as-needed,-z,relro -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -lpcap -lQtGui -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/lib/qt4/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		guip0f.cpp \
		p0f.c \
		process.c \
		readfp.c \
		fp_tcp.c \
		fp_mtu.c \
		fp_http.c \
		api.c \
		tools/p0f-sendsyn6.c \
		tools/p0f-sendsyn.c \
		tools/p0f-client.c \
		p0f_auditor.cpp \
		p0f_info.cpp \
		network_db.cpp \
		host.cpp \
		mythread.cpp moc_guip0f.cpp
OBJECTS       = main.o \
		guip0f.o \
		p0f.o \
		process.o \
		readfp.o \
		fp_tcp.o \
		fp_mtu.o \
		fp_http.o \
		api.o \
		p0f-sendsyn6.o \
		p0f-sendsyn.o \
		p0f-client.o \
		p0f_auditor.o \
		p0f_info.o \
		network_db.o \
		host.o \
		mythread.o \
		moc_guip0f.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		p0f-QT-GUI.pro
QMAKE_TARGET  = p0f-QT-GUI
DESTDIR       = 
TARGET        = p0f-QT-GUI

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_guip0f.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: p0f-QT-GUI.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtNetwork.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -o Makefile p0f-QT-GUI.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_phonon.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtNetwork.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -o Makefile p0f-QT-GUI.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/p0f-QT-GUI1.0.0 || $(MKDIR) .tmp/p0f-QT-GUI1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/p0f-QT-GUI1.0.0/ && $(COPY_FILE) --parents guip0f.h p0f.h process.h readfp.h fp_tcp.h fp_mtu.h api.h alloc-inl.h types.h tcp.h languages.h hash.h fp_http.h debug.h config.h p0f_auditor.h p0f_info.h network_db.h host.h mythread.h .tmp/p0f-QT-GUI1.0.0/ && $(COPY_FILE) --parents main.cpp guip0f.cpp p0f.c process.c readfp.c fp_tcp.c fp_mtu.c fp_http.c api.c tools/p0f-sendsyn6.c tools/p0f-sendsyn.c tools/p0f-client.c p0f_auditor.cpp p0f_info.cpp network_db.cpp host.cpp mythread.cpp .tmp/p0f-QT-GUI1.0.0/ && $(COPY_FILE) --parents guip0f.ui .tmp/p0f-QT-GUI1.0.0/ && (cd `dirname .tmp/p0f-QT-GUI1.0.0` && $(TAR) p0f-QT-GUI1.0.0.tar p0f-QT-GUI1.0.0 && $(COMPRESS) p0f-QT-GUI1.0.0.tar) && $(MOVE) `dirname .tmp/p0f-QT-GUI1.0.0`/p0f-QT-GUI1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/p0f-QT-GUI1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_guip0f.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_guip0f.cpp
moc_guip0f.cpp: ui_guip0f.h \
		mythread.h \
		network_db.h \
		p0f_info.h \
		host.h \
		guip0f.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) guip0f.h -o moc_guip0f.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_guip0f.h
compiler_uic_clean:
	-$(DEL_FILE) ui_guip0f.h
ui_guip0f.h: guip0f.ui
	/usr/lib/qt4/bin/uic guip0f.ui -o ui_guip0f.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

main.o: main.cpp guip0f.h \
		ui_guip0f.h \
		mythread.h \
		network_db.h \
		p0f_info.h \
		host.h \
		p0f.h \
		types.h \
		process.h \
		config.h \
		fp_http.h \
		fp_tcp.h \
		api.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

guip0f.o: guip0f.cpp guip0f.h \
		ui_guip0f.h \
		mythread.h \
		network_db.h \
		p0f_info.h \
		host.h \
		p0f_auditor.h \
		p0f.h \
		types.h \
		process.h \
		config.h \
		fp_http.h \
		fp_tcp.h \
		api.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o guip0f.o guip0f.cpp

p0f.o: p0f.c p0f_auditor.h \
		types.h \
		debug.h \
		config.h \
		fp_http.h \
		alloc-inl.h \
		process.h \
		fp_tcp.h \
		readfp.h \
		api.h \
		tcp.h \
		p0f.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o p0f.o p0f.c

process.o: process.c types.h \
		config.h \
		fp_http.h \
		debug.h \
		alloc-inl.h \
		process.h \
		fp_tcp.h \
		hash.h \
		tcp.h \
		readfp.h \
		p0f.h \
		api.h \
		fp_mtu.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o process.o process.c

readfp.o: readfp.c types.h \
		config.h \
		fp_http.h \
		debug.h \
		alloc-inl.h \
		fp_tcp.h \
		process.h \
		fp_mtu.h \
		readfp.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o readfp.o readfp.c

fp_tcp.o: fp_tcp.c types.h \
		config.h \
		fp_http.h \
		debug.h \
		alloc-inl.h \
		process.h \
		fp_tcp.h \
		hash.h \
		tcp.h \
		readfp.h \
		p0f.h \
		api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o fp_tcp.o fp_tcp.c

fp_mtu.o: fp_mtu.c types.h \
		config.h \
		fp_http.h \
		debug.h \
		alloc-inl.h \
		process.h \
		fp_tcp.h \
		readfp.h \
		p0f.h \
		api.h \
		tcp.h \
		fp_mtu.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o fp_mtu.o fp_mtu.c

fp_http.o: fp_http.c types.h \
		config.h \
		fp_http.h \
		debug.h \
		alloc-inl.h \
		process.h \
		fp_tcp.h \
		readfp.h \
		p0f.h \
		api.h \
		tcp.h \
		hash.h \
		languages.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o fp_http.o fp_http.c

api.o: api.c types.h \
		config.h \
		fp_http.h \
		debug.h \
		alloc-inl.h \
		p0f.h \
		process.h \
		fp_tcp.h \
		api.h \
		readfp.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o api.o api.c

p0f-sendsyn6.o: tools/p0f-sendsyn6.c types.h \
		config.h \
		fp_http.h \
		alloc-inl.h \
		debug.h \
		tcp.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o p0f-sendsyn6.o tools/p0f-sendsyn6.c

p0f-sendsyn.o: tools/p0f-sendsyn.c types.h \
		config.h \
		fp_http.h \
		alloc-inl.h \
		debug.h \
		tcp.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o p0f-sendsyn.o tools/p0f-sendsyn.c

p0f-client.o: tools/p0f-client.c types.h \
		config.h \
		fp_http.h \
		alloc-inl.h \
		debug.h \
		api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o p0f-client.o tools/p0f-client.c

p0f_auditor.o: p0f_auditor.cpp p0f_auditor.h \
		p0f_info.h \
		network_db.h \
		host.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o p0f_auditor.o p0f_auditor.cpp

p0f_info.o: p0f_info.cpp p0f_info.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o p0f_info.o p0f_info.cpp

network_db.o: network_db.cpp network_db.h \
		p0f_info.h \
		host.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o network_db.o network_db.cpp

host.o: host.cpp host.h \
		p0f_info.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o host.o host.cpp

mythread.o: mythread.cpp mythread.h \
		p0f.h \
		types.h \
		process.h \
		config.h \
		fp_http.h \
		fp_tcp.h \
		api.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mythread.o mythread.cpp

moc_guip0f.o: moc_guip0f.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_guip0f.o moc_guip0f.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

